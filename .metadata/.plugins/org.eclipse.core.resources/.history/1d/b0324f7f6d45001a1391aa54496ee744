import java.util.Scanner;
public class BMICalculator {
	public static void main(String[] args) {
	    BMICalculator app = new BMICalculator();
	    app.readUserData();
	    app.calculateBmi();
	    app.displayBmi();
	
		switch (choice) {
			
		case 1:
			System.out.println("Please enter your weight in pounds: ");
			Scanner weightInputPounds = new Scanner(System.in);
			float weightPounds = weightInputPounds.nextFloat();
			
			if (weightPounds < 0)
				break;
			
			System.out.println("Please enter your height in inches: ");
			Scanner heightInputInches = new Scanner(System.in);
			float heightInches = heightInputInches.nextFloat();
			
			if (heightInches < 0)
				break;
			
			float BMIpou = (703 * weightPounds)/(heightInches * heightInches);
			
			System.out.printf("\nYour BMI is %02f.", BMIpou);
			
			break;
		
		case 2:
			System.out.println("Please enter your weight in kilograms: ");
			Scanner weightInputKilograms = new Scanner(System.in);
			float weightKilograms = weightInputKilograms.nextFloat();
			
			if (weightKilograms < 0)
				break;
			
			System.out.println("Please enter your weight in meters: ");
			Scanner heightInputMeters = new Scanner(System.in);
			float heightMeters = heightInputMeters.nextFloat();
			
			if (heightMeters < 0)
				break;
			
			float BMIkilo = (weightKilograms)/(heightMeters * heightMeters);
			
			System.out.printf("\nYour BMI is %02f.", BMIkilo);
			
			break;
		
			default:
				System.out.println("Please enter either 1 or 2.");
				break;
			
		}
	}
	public static void readUserData() {
		
	}
	
	private static void readUnitType() {
		
	}
	
	private static void readMeasurementData() {
		
	}
	
	private static void readMetricData() {
		
	}
	private static void readImperialData() {
		
	}
	public static void calculateBmi() {
		
	}
	private static void calculateBmiCategory() {
		
	}
	public static void displayBmi() {
		System.out.println();
	}
	public static void getWeight() {
		System.out.println("Please enter your weight in pounds: ");
		Scanner weightInputPounds = new Scanner(System.in);
	}
	private static void setWeight(float weightInputPounds) {
	float weightPounds = weightInputPounds;
		
	}
	public static void getHeight() {
		System.out.println("Please enter your height in inches: ");
		Scanner heightInputInches = new Scanner(System.in);
		
	}
	private static void setHeight(float heightInputInches) {
		float heightInches = heightInputInches;
		
	}
	public static void getBmi() {
		
	}
	public static void getBmiCategory() {
		System.out.println("Which BMI formula would you like to choose? Please enter the number of your option.\n");
		System.out.println("\n1. Imperial: BMI = (703 * weight in pounds)/(height in inches)^2");
		System.out.println("\n2. Metric: BMI = weight in kilograms/(height in meters)^2");
		
		Scanner choiceInput = new Scanner(System.in);
		int choice = choiceInput.nextInt();
	}
}
/* p2: BMICalculator contains a public instance method called
readUserData that makes use of both readUnitType and readMeasurementData methods 

p2: BMICalculator contains a private instance method called readUnitType 

p2: BMICalculator contains a private instance method called readMeasurementData
that calls either readMetricData or readImperialData, depending on the unit type 

p2: BMICalculator contains a private instance method called readMetricData 

p2: BMICalculator contains a private method called readImperialData 

p2: BMICalculator contains a public instance method called calculateBmi that calculates the user's BMI and BMI category 

p2: BMICalculator contains a private instance method called calculateBmiCategory that determines the user's BMI category 

p2: BMICalculator contains a public instance method called displayBmi that prints the BMI value and category to standard output 

p2: BMICalculator contains a public instance method called getWeight 

p2: BMICalculator contains a private instance method called setWeight 

p2: BMICalculator contains a public instance method called getHeight 

p2: BMICalculator contains a private instance method called setHeight 

p2: BMICalculator contains a public instance method called getBmi 

p2: BMICalculator contains a public instance method called getBmiCategory 

p2: The program should exit if the user enters a negative weight 

p2: The program should exit if the user enters a negative height 

p2: The calculated BMi and associated category are correct. 

p2: The user should be prompted to enter the type of units until they enter a valid value 

p1: Pseudocode for the solution is embedded in the source code 

p2: Pseudocode for the solution is embedded in the source code */